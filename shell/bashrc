#!/usr/bin/env bash

# the path to other dotfiles
export DOTFILES_PATH="$HOME/.dotfiles"

# directory aliases
alias lx='ls -lXB' # order by filetype
alias lk='ls -lSr' # order by filesize reversed
alias lt='ls -ltr' # order by file modified time
alias lc='ls -ltcr' # order by filectime
alias lu='ls -ltur' # order by file access time
alias ls='ls -h --color --group-directories-first' # flat view w/ directories first
alias l='ls -h --color --group-directories-first' # same as above
alias ll='ls -lv --group-directories-first' # non-flat view
alias lm='ll | more'
alias lr='ll -R' # Please don't.
alias la='ll -A' # Show. Everything.
alias tree='tree -Csuh'

# music aliases
alias playgplaylist='gmusic-mpd --tracks 100000 --play 0 -d ~/.config/mpd/playlists -r'
alias initgmusic='killall mpd 2> /dev/null || true && killall GMusicProxy 2> /dev/null || true && mpd && GMusicProxy'

# tmux aliases
alias tmux='TERM=screen-256color-bce tmux' # For syntax higlighting for vim in tmux
alias tmls="tmux ls"
alias tmnew="tmux new -s"
alias tmatt="tmux attach -t"

# git aliases
alias gs="git status"
alias gl="git log"
alias ga="git add -A"
alias gc="git commit -m"
alias gac="git add -A && git commit -m"
alias gp="git push"
alias gpl="git pull" # not the license

# misc aliases
alias svim='sudo -E vim' # run vim as root with my config
alias arch-update="tmux -c 'pacaur --noconfirm --noedit -Syyu'" # update all packages
alias p='ping 8.8.8.8' # ping google's DNS server
alias wine32steam='WINEPREFIX=~/.wine32 WINEARCH=win32 wine ~/.wine32/drive_c/Program\ Files/Steam/Steam.exe'
alias htop='htop -d 2' # faster refresh rate

# typo aliases
alias cd..='cd ..'

# editor
export EDITOR="vim"
if [ -f "/usr/local/bin/nvim" ]; then
  # if we've got neovim around, let's use it!
  alias _vim="vim"
  alias vim="nvim"
  export EDITOR="nvim"
fi

# man pages with vim
vman() {
  vim -c "SuperMan $*"

  if [ "$?" != "0" ]; then
    echo "No manual entry for $*"
  fi
}
alias _man="man"
alias man="vman"

# google music "I'm Feeling Lucky" radio `ifl` shortcut
if hash GMusicProxy 2>/dev/null; then
  ifl() {
    gmusic-mpd --tracks 20 --play 0 -d ~/.config/mpd/playlists -r --ifl
  }
  export -f ifl
fi

# ruby gems to path
if which ruby >/dev/null && which gem >/dev/null; then
    export PATH="$(ruby -rubygems -e 'puts Gem.user_dir')/bin:$PATH"
fi

# prompt
COLOR_RESET='\e[0m'
PROMPT_SUCCESS_COLOR='\e[0;32m'
PROMPT_FAILURE_COLOR='\e[0;31m'
prompt_command_func() 
{
  RET=$?
  if [ $RET -eq 0 ]; then
    STATUS_COLOR=$PROMPT_SUCCESS_COLOR
  else
    STATUS_COLOR=$PROMPT_FAILURE_COLOR
  fi;
  PS1="┌ $STATUS_COLOR\u@\h$COLOR_RESET \w \n└ "
}
export PROMPT_COMMAND="prompt_command_func"

bspwm_padding() {
  NEW_PADDING="$1"
  if [[ ${1:0:1} = "+" ]]; then
    NEW_PADDING=$((`bspc config -d focused top_padding` + ${1:1} ))
  fi
  if [[ ${1:0:1} = "-" ]]; then
    NEW_PADDING=$((`bspc config -d focused top_padding` - ${1:1} ))
  fi
  bspc config -d focused top_padding $NEW_PADDING
  bspc config -d focused left_padding $NEW_PADDING
  bspc config -d focused right_padding $NEW_PADDING
  bspc config -d focused bottom_padding $NEW_PADDING
}
export -f bspwm_padding

# interface environment variables
PRIMARY_FONT_XRESOURCES=$(grep "#define primaryfont xft:" ~/.Xresources | grep -v "/\*" | head -n 1)
export PRIMARY_FONT_FAMILY=${PRIMARY_FONT_XRESOURCES:24:-3}
export PRIMARY_FONT_FAMILY_WITH_SIZE=${PRIMARY_FONT_XRESOURCES:24}
export PRIMARY_FONT_SIZE=$(echo $PRIMARY_FONT_FAMILY_WITH_SIZE | sed 's/.*\-//')

SECONDARY_FONT_XRESOURCES=$(grep "#define secondaryfont xft:" ~/.Xresources | grep -v "/\*" | head -n 1)
export SECONDARY_FONT_FAMILY=${SECONDARY_FONT_XRESOURCES:26:-3}
export SECONDARY_FONT_FAMILY_WITH_SIZE=${SECONDARY_FONT_XRESOURCES:26}
export SECONDARY_FONT_SIZE=$(echo $SECONDARY_FONT_FAMILY_WITH_SIZE | sed 's/.*\-//')

ICON_FONT_XRESOURCES=$(grep "#define iconfont xft:" ~/.Xresources | grep -v "/\*" | head -n 1)
export ICON_FONT_FAMILY=${ICON_FONT_XRESOURCES:21:-3}
export ICON_FONT_FAMILY_WITH_SIZE=${ICON_FONT_XRESOURCES:21}
export ICON_FONT_SIZE=$(echo $ICON_FONT_FAMILY_WITH_SIZE | sed 's/.*\-//')

export BAR_HEIGHT="36"
export BAR_FIFO="$HOME/.bar_fifo"
export BAR_FONT_FAMILY="$PRIMARY_FONT_FAMILY_WITH_SIZE"
export BAR_ICON_FONT_FAMILY="$ICON_FONT_FAMILY_WITH_SIZE"

export WINDOW_GAP="50"
export BORDER_WIDTH="1"

# miscellaneous environment variables
export EMAIL="daniel@lytedev.io"

# load shell colors
BASE16_SHELL="$DOTFILES_PATH/colors/current.dark.sh"
[[ -s $BASE16_SHELL ]] && source $BASE16_SHELL

export GOPATH=~/code/go
export PATH="$GOPATH/bin:$PATH"

# misc other scripts to run
source "$DOTFILES_PATH/shell/git-completion.bash"
source "$DOTFILES_PATH/wm/scripts/backlight.sh"
source "$DOTFILES_PATH/wm/bar/bar_funcs"

# shortcut for grabbing a color in hex format from our ~/.Xresources.colors
# file
get_color()
{
  XR_COLOR_DEF=$(grep "#define base$1 #" ~/.Xresources.colors)
  echo ${XR_COLOR_DEF:16}
}
export -f get_color

# allow a per-device script that is pulled in
if [ -a "$HOME/.bashrc_env" ]; then
  source "$HOME/.bashrc_env"
fi

