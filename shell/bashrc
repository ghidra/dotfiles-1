#!/usr/bin/env bash

# Aliases
## Directory listing aliases
alias lx='ls -lXB' # order by filetype
alias lk='ls -lSr' # order by filesize reversed
alias lt='ls -ltr' # order by file modified time
alias lc='ls -ltcr' # order by filectime
alias lu='ls -ltur' # order by file access time
alias ls='ls -h --color --group-directories-first' # flat view w/ directories first
alias l='ls -h --color --group-directories-first' # same as above
alias ll='ls -lv --group-directories-first' # non-flat view
alias lm='ll | more'
alias lr='ll -R' # Please don't.
alias la='ll -A' # Show. Everything.
alias tree='tree -Csuh'
alias tmux='TERM=screen-256color-bce tmux' # For syntax higlighting for vim in tmux
alias playgplaylist='gmusic-mpd --tracks 100000 --play 0 -d ~/.config/mpd/playlists -r'
alias initgmusic='killall mpd 2> /dev/null || true && killall GMusicProxy 2> /dev/null || true && mpd && GMusicProxy'
alias svim='sudo -E vim'
alias cd..='cd ..'

## TMUX Aliases
alias tmls="tmux ls"
alias tmnew="tmux new -s"
alias tmatt="tmux attach -t"

## Git aliases
alias gs="git status"
alias gl="git log"
alias ga="git add -A"
alias gc="git commit -m"
alias gac="git add -A && git commit -m"
alias gp="git push"
alias gpl="git pull" # not the license

vman() {
  vim -c "SuperMan $*"

  if [ "$?" != "0" ]; then
    echo "No manual entry for $*"
  fi
}

if hash GMusicProxy 2>/dev/null; then
  ifl() {
    gmusic-mpd --tracks 20 --play 0 -d ~/.config/mpd/playlists -r --ifl
  }
fi

alias _man="man"
alias man="vman"

# OSX Fix for certain things
if [ $(uname) = "Darwin" ]; then
  # This fixes some OSX printf issues
  alias printf='env printf'
fi

# Set editor
export EDITOR="vim"
# If we have neovim installed, let's use that instead!
if [ -f "/usr/local/bin/nvim" ]; then
  alias _vim="vim"
  alias vim="nvim"
  export EDITOR="nvim"
fi

if which ruby >/dev/null && which gem >/dev/null; then
    PATH="$(ruby -rubygems -e 'puts Gem.user_dir')/bin:$PATH"
fi

# Reset
Color_Off='\e[0m'       # Text Reset

# Regular Colors
Black='\e[0;30m'        # Black
Red='\e[0;31m'          # Red
Green='\e[0;32m'        # Green
Yellow='\e[0;33m'       # Yellow
Blue='\e[0;34m'         # Blue
Purple='\e[0;35m'       # Purple
Cyan='\e[0;36m'         # Cyan
White='\e[0;37m'        # White

# Bold
BBlack='\e[1;30m'       # Black
BRed='\e[1;31m'         # Red
BGreen='\e[1;32m'       # Green
BYellow='\e[1;33m'      # Yellow
BBlue='\e[1;34m'        # Blue
BPurple='\e[1;35m'      # Purple
BCyan='\e[1;36m'        # Cyan
BWhite='\e[1;37m'       # White

# Underline
UBlack='\e[4;30m'       # Black
URed='\e[4;31m'         # Red
UGreen='\e[4;32m'       # Green

UYellow='\e[4;33m'      # Yellow
UBlue='\e[4;34m'        # Blue
UPurple='\e[4;35m'      # Purple
UCyan='\e[4;36m'        # Cyan
UWhite='\e[4;37m'       # White

# Background
On_Black='\e[40m'       # Black
On_Red='\e[41m'         # Red
On_Green='\e[42m'       # Green
On_Yellow='\e[43m'      # Yellow
On_Blue='\e[44m'        # Blue
On_Purple='\e[45m'      # Purple
On_Cyan='\e[46m'        # Cyan
On_White='\e[47m'       # White

# High Intensity
IBlack='\e[0;90m'       # Black
IRed='\e[0;91m'         # Red
IGreen='\e[0;92m'       # Green
IYellow='\e[0;93m'      # Yellow
IBlue='\e[0;94m'        # Blue
IPurple='\e[0;95m'      # Purple
ICyan='\e[0;96m'        # Cyan
IWhite='\e[0;97m'       # White

# Bold High Intensity
BIBlack='\e[1;90m'      # Black
BIRed='\e[1;91m'        # Red
BIGreen='\e[1;92m'      # Green
BIYellow='\e[1;93m'     # Yellow
BIBlue='\e[1;94m'       # Blue
BIPurple='\e[1;95m'     # Purple
BICyan='\e[1;96m'       # Cyan
BIWhite='\e[1;97m'      # White

# High Intensity backgrounds
On_IBlack='\e[0;100m'   # Black
On_IRed='\e[0;101m'     # Red
On_IGreen='\e[0;102m'   # Green
On_IYellow='\e[0;103m'  # Yellow
On_IBlue='\e[0;104m'    # Blue
On_IPurple='\e[0;105m'  # Purple
On_ICyan='\e[0;106m'    # Cyan
On_IWhite='\e[0;107m'   # White

function line() {
  return
}

export PROMPT_COMMAND='RET=$?; \
  LINE="$(line)"; \
  if [ $RET -eq 0 ]; then \
    STATUS_COLOR=$BGreen; \
  else \
    STATUS_COLOR=$BRed; \
  fi; \
  PS1="┌ $STATUS_COLOR\u@\h$Color_Off \w \n└ "; \
  if [ $(uname) != "Darwin" ]; then \
    PS1="$LINE\r$PS1"; \
  fi'

export GOPATH=~/code/go
export PATH="$GOPATH/bin:$PATH"

export BAR_HEIGHT="24"
export BAR_FIFO="$HOME/.bar_fifo"
export BAR_FONT_FAMILY="Terminess Powerline-16"

export DOTFILES_PATH="$HOME/dotfiles"

BASE16_SHELL="$DOTFILES_PATH/colors/base16-monokai-lyte.dark.sh"
[[ -s $BASE16_SHELL ]] && source $BASE16_SHELL

source "$DOTFILES_PATH/shell/git-completion.bash"
source "$DOTFILES_PATH/wm/scripts/backlight.sh"

source "$DOTFILES_PATH/wm/bar/bar_funcs"

