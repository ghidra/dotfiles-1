# window manager shortcuts

# kill the window manager
super + ctrl + Escape
	bspc quit

# kill the current window
super + c
	bspc window -c

# swap layouts
#super + y
#  bspc desktop -l next

# balance window surface area on current desktop
super + b
	bspc desktop -B

# toggle floating/fullscreen modes for current window
super + {s,f}
	bspc window -t {floating,fullscreen}

# focus the last window/desktop
super + {grave,Tab}
	bspc {window,desktop} -f last

# swap positions with the previous window
super + apostrophe
	bspc window -s last

# swap the current window with the biggest window on the current desktop
super + m
	bspc window -s biggest

# move/swap between windows using vim-style arrows
super + {_,shift + }{h,j,k,l}
	bspc window -{f,s} {left,down,up,right}

# swap previous/next desktops
super + bracket{left,right}
	bspc desktop -f {prev,next}

super + {p,n}
	bspc desktop -f {prev,next}

# rotate window placement on current desktop
super + r
  bspc desktop -R 90

# preselect the splitting area for the current window
super + ctrl + {h,j,k,l}
	bspc window -p {left,down,up,right}

# clear the splitting area
super + ctrl + {_,shift + }space
	bspc {window -p cancel,desktop -c}

# expand the current window
super + alt + {h,j,k,l}
	bspc window -e {left -10,down +10,up -10,right +10}

# shrink the current window
super + alt + shift + {h,j,k,l}
	bspc window -e {right -10,up +10,down -10,left +10}

# set window split ratio
super + ctrl + {1-9,0}
	bspc window -r 0.{1-9,10}

# focus/move window to the selected desktop
super + {_,shift + }{1-9,0}
	bspc {desktop -f,window -d} ^{1-9,10}

# focus clicked window
~button1
	bspc pointer -g focus

# mouse controls for window movement and resizing
super + button{1-3}
	bspc pointer -g {move,resize_side,resize_corner}

# simulate mouse2
shift + super + button1
  bspc pointer -g resize_corner

# ???
super + !button{1-3}
	bspc pointer -t %i %i

# ???
super + @button{1-3}
	bspc pointer -u

# change window gap and desktop padding
super + plus
    bspc config -d focused window_gap $((`bspc config -d focused window_gap` + 5 ))

super + equal
    bspc config -m $(bspc query -M | head -n 1) top_padding $BAR_HEIGHT; bspc config -d focused window_gap $WINDOW_GAP

super + minus
    bspc config -d focused window_gap $((`bspc config -d focused window_gap` - 5 ))

super + alt + r
    bspc config -m $(bspc query -M | head -n 1) top_padding $BAR_HEIGHT; bspc config -d focused window_gap 0

super + alt + plus
    bspwm_padding +5

super + alt + minus
    bspwm_padding -5

# wm-independant shortcuts

# spawn a transparent window
super + alt + t
  urxvtc && compton-trans -c -o 0

# make current window transparent
super + t
  compton-trans -c -o 0

# make current window fully opaque
super + shift + t
  compton-trans -c -o 100

# swap sxhkx config with an alternate file and reload the new one
super + shift + alt + ctrl + r
  if [ -e ~/.config/sxhkd/altsxhkdrc ]; then mv ~/.config/sxhkd/sxhkdrc ~/.config/sxhkd/origsxhkdrc && mv ~/.config/sxhkd/altsxhkdrc ~/.config/sxhkd/sxhkdrc && pkill -USR1 -x sxhkd; fi

# spawn a terminal
super + Return
	urxvtc

# spawn the app launcher
super + space
	dmenu_run -fn "$PRIMARY_FONT_FAMILY_WITH_SIZE" -i -nb "#$(get_color 00)" -sb "#$(get_color 00)" -sf "#$(get_color 0A)" -nf "#$(get_color 04)" -h "$BAR_HEIGHT"

# make sxhkd reload its configuration files:
super + Escape
	pkill -USR1 -x sxhkd

# lock the desktop
super + ctrl + shift + l
  slock

# spawn gui file explorer
super + e
    thunar

# volumes controls and media navigation for media keys
{_,shift + }XF86AudioLowerVolume
  ADJ={10,1} && amixer -c 1 sset Speaker $ADJ%- && amixer -c 1 sset Headphone $ADJ%- && amixer -c 1 sset Master $ADJ%- && update_bar_MasterVolume

{_,shift + }XF86AudioRaiseVolume
  ADJ={10,1} && amixer -c 1 sset Speaker $ADJ%+ && amixer -c 1 sset Headphone $ADJ%+ && amixer -c 1 sset Master $ADJ%+ && update_bar_MasterVolume

XF86AudioMute
  amixer -c 1 sset Master toggle && update_bar_MasterVolume

XF86AudioPlay
  mpc toggle

XF86AudioNext
  mpc next

XF86AudioPrev
  mpc prev

# monitor brightness controls for monitor birghtness keys
{_,shift + }XF86MonBrightnessUp
  add_percent_brightness {0.1,0.01} && update_bar_DisplayBrightness

{_,shift + }XF86MonBrightnessDown
  sub_percent_brightness {0.1,0.01} && update_bar_DisplayBrightness

